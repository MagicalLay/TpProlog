/**
TP 7 Base de Données Déductives (BDD) - Prolog

@author Pierre-Marie AIRIAU
@version Annee scolaire 2014/2015
*/


/*
===============================================================================
===============================================================================
 Définition des prédicats
===============================================================================
*/
% ============================================================================= 
% SECTION 1 : Base de données
% ============================================================================= 

assemblage(voiture, porte, 4).
assemblage(voiture, roue, 4).
assemblage(voiture, moteur, 1).
assemblage(roue, jante, 1).
assemblage(porte, tole, 1).
assemblage(porte, vitre, 1).
assemblage(roue, pneu, 1).
assemblage(moteur, piston, 4).
assemblage(moteur, soupape, 16).

           
piece(p1, tole, lyon).
piece(p2, jante, lyon).
piece(p3, jante, marseille).
piece(p4, pneu, clermontFerrand).
piece(p5, piston, toulouse).
piece(p6, soupape, lille).
piece(p7, vitre, nancy).
piece(p8, tole, marseille).
piece(p9, vitre, marseille).

                  
demandeFournisseur(dupont, lyon).
demandeFournisseur(michel, clermontFerrand).
demandeFournisseur(durand, lille).
demandeFournisseur(dupond, lille).
demandeFournisseur(martin, rennes).
demandeFournisseur(smith, paris).
demandeFournisseur(brown, marseille).
          
          
fournisseurReference(f1, dupont, lyon).
fournisseurReference(f2, durand, lille).
fournisseurReference(f3, martin, rennes).
fournisseurReference(f4, michel, clermontFerrand).
fournisseurReference(f5, smith, paris).
fournisseurReference(f6, brown, marseille).

                  
livraison(f1, p1, 300).
livraison(f2, p2, 200).
livraison(f3, p3, 200).
livraison(f4, p4, 400).
livraison(f6, p5, 500).
livraison(f6, p6, 1000).
livraison(f6, p7, 300).
livraison(f1, p2, 300).
livraison(f4, p2, 300).
livraison(f4, p1, 300).


% ============================================================================= 
% SECTION 2 : Opération relationnelles
% ============================================================================= 

select(Y, [X,Z]) :- piece(X, Z, Y).

proj([X,Y]) :- piece(_,X,Y).

union([X,Y]) :- demandeFournisseur(X,Y).
union([X,Y]) :- fournisseurReference(_, X, Y), 
		not demandeFournisseur(X, Y).

intersection([X, Y]) :- fournisseurReference(_, X, Y), 
			demandeFournisseur(X, Y).

diffEnsemble([X, Y]) :- demandeFournisseur(X, Y), 
			not fournisseurReference(_, X, Y).

prodCart([F, N, V, F1, P, Q]) :- fournisseurReference(F, N, V), 
				 livraison(F1, P, Q).

jointure([F, N, V, P, Q]) :- fournisseurReference(F, N, V), 
			     livraison(F, P, Q).
jointure350([F, N, V, P, Q]) :- jointure([F, N, V, P, Q]), 
				Q>350.

div([F, N, V]) :- fournisseurReference(F, N, V), 
		  livraison(F, P, _), 
		  piece(P, _, lyon).

nbPiece([F,Qt]) :- livraison(F,_,Q), .

% ============================================================================= 
% SECTION 3 : Au delà de l’algèbre relationnelle
% ============================================================================= 





/*
===============================================================================
===============================================================================
 Tests
===============================================================================
select(lyon, X).
X = [p1, tole]
Yes (0.00s cpu, solution 1, maybe more) ? ;
X = [p2, jante]
Yes (0.00s cpu, solution 2)

proj(X).
X = [tole, lyon]
Yes (0.00s cpu, solution 1, maybe more) ? ;
X = [jante, lyon]
Yes (0.00s cpu, solution 2, maybe more) ? ;
X = [jante, marseille]
Yes (0.00s cpu, solution 3, maybe more) ? ;
X = [pneu, clermontFerrand]
Yes (0.00s cpu, solution 4, maybe more) ? ;
X = [piston, toulouse]
Yes (0.00s cpu, solution 5, maybe more) ? ;
X = [soupape, lille]
Yes (0.00s cpu, solution 6, maybe more) ? ;
X = [vitre, nancy]
Yes (0.00s cpu, solution 7, maybe more) ? ;
X = [tole, marseille]
Yes (0.00s cpu, solution 8, maybe more) ? ;
X = [vitre, marseille]
Yes (0.00s cpu, solution 9)

union(X).
X = [dupont, lyon]
Yes (0.00s cpu, solution 1, maybe more) ? ;
X = [michel, clermontFerrand]
Yes (0.00s cpu, solution 2, maybe more) ? ;
X = [durand, lille]
Yes (0.00s cpu, solution 3, maybe more) ? ;
X = [dupond, lille]
Yes (0.00s cpu, solution 4, maybe more) ? ;
X = [martin, rennes]
Yes (0.00s cpu, solution 5, maybe more) ? ;
X = [smith, paris]
Yes (0.00s cpu, solution 6, maybe more) ? ;
X = [brown, marseille]
Yes (0.00s cpu, solution 7, maybe more) ? ;
No (0.00s cpu)

intersection(X).
X = [dupont, lyon]
Yes (0.00s cpu, solution 1, maybe more) ? ;
X = [durand, lille]
Yes (0.00s cpu, solution 2, maybe more) ? ;
X = [martin, rennes]
Yes (0.00s cpu, solution 3, maybe more) ? ;
X = [michel, clermontFerrand]
Yes (0.00s cpu, solution 4, maybe more) ? ;
X = [smith, paris]
Yes (0.00s cpu, solution 5, maybe more) ? ;
X = [brown, marseille]
Yes (0.00s cpu, solution 6)

diffEnsemble(X).
X = [dupond, lille]
Yes (0.00s cpu, solution 1, maybe more) ? ;
No (0.00s cpu)

prodCart(X).
X = [f1, dupont, lyon, f1, p1, 300]
Yes (0.00s cpu, solution 1, maybe more) ? ;
X = [f1, dupont, lyon, f2, p2, 200]
Yes (0.00s cpu, solution 2, maybe more) ? ;
X = [f1, dupont, lyon, f3, p3, 200]
Yes (0.00s cpu, solution 3, maybe more) ? ;
X = [f1, dupont, lyon, f4, p4, 400]
Yes (0.01s cpu, solution 4, maybe more) ? ;
X = [f1, dupont, lyon, f6, p5, 500]
Yes (0.01s cpu, solution 5, maybe more) ? ;
X = [f1, dupont, lyon, f6, p6, 1000]
Yes (0.01s cpu, solution 6, maybe more) ? ;
X = [f1, dupont, lyon, f6, p7, 300]
Yes (0.01s cpu, solution 7, maybe more) ? ;
X = [f1, dupont, lyon, f1, p2, 300]
Yes (0.01s cpu, solution 8, maybe more) ? ;
X = [f1, dupont, lyon, f4, p2, 300]
Yes (0.01s cpu, solution 9, maybe more) ? ;
X = [f1, dupont, lyon, f4, p1, 300]
Yes (0.01s cpu, solution 10, maybe more) ? ;
X = [f2, durand, lille, f1, p1, 300]
Yes (0.01s cpu, solution 11, maybe more) ? ;
X = [f2, durand, lille, f2, p2, 200]
Yes (0.01s cpu, solution 12, maybe more) ? ;
X = [f2, durand, lille, f3, p3, 200]
Yes (0.01s cpu, solution 13, maybe more) ? ;
X = [f2, durand, lille, f4, p4, 400]
Yes (0.01s cpu, solution 14, maybe more) ? ;
X = [f2, durand, lille, f6, p5, 500]
Yes (0.01s cpu, solution 15, maybe more) ? ;
X = [f2, durand, lille, f6, p6, 1000]
Yes (0.01s cpu, solution 16, maybe more) ? ;
X = [f2, durand, lille, f6, p7, 300]
Yes (0.01s cpu, solution 17, maybe more) ? ;
X = [f2, durand, lille, f1, p2, 300]
Yes (0.01s cpu, solution 18, maybe more) ? ;
X = [f2, durand, lille, f4, p2, 300]
Yes (0.01s cpu, solution 19, maybe more) ? ;
X = [f2, durand, lille, f4, p1, 300]
Yes (0.01s cpu, solution 20, maybe more) ? ;
X = [f3, martin, rennes, f1, p1, 300]
Yes (0.01s cpu, solution 21, maybe more) ? ;
X = [f3, martin, rennes, f2, p2, 200]
Yes (0.01s cpu, solution 22, maybe more) ? ;
X = [f3, martin, rennes, f3, p3, 200]
Yes (0.01s cpu, solution 23, maybe more) ? ;
X = [f3, martin, rennes, f4, p4, 400]
Yes (0.01s cpu, solution 24, maybe more) ? ;
X = [f3, martin, rennes, f6, p5, 500]
Yes (0.01s cpu, solution 25, maybe more) ? ;
X = [f3, martin, rennes, f6, p6, 1000]
Yes (0.01s cpu, solution 26, maybe more) ? ;
X = [f3, martin, rennes, f6, p7, 300]
Yes (0.01s cpu, solution 27, maybe more) ? ;
X = [f3, martin, rennes, f1, p2, 300]
Yes (0.01s cpu, solution 28, maybe more) ? ;
X = [f3, martin, rennes, f4, p2, 300]
Yes (0.01s cpu, solution 29, maybe more) ? ;
X = [f3, martin, rennes, f4, p1, 300]
Yes (0.01s cpu, solution 30, maybe more) ? ;
X = [f4, michel, clermontFerrand, f1, p1, 300]
Yes (0.01s cpu, solution 31, maybe more) ? ;
X = [f4, michel, clermontFerrand, f2, p2, 200]
Yes (0.01s cpu, solution 32, maybe more) ? ;
X = [f4, michel, clermontFerrand, f3, p3, 200]
Yes (0.01s cpu, solution 33, maybe more) ? ;
X = [f4, michel, clermontFerrand, f4, p4, 400]
Yes (0.01s cpu, solution 34, maybe more) ? ;
X = [f4, michel, clermontFerrand, f6, p5, 500]
Yes (0.01s cpu, solution 35, maybe more) ? ;
X = [f4, michel, clermontFerrand, f6, p6, 1000]
Yes (0.01s cpu, solution 36, maybe more) ? ;
X = [f4, michel, clermontFerrand, f6, p7, 300]
Yes (0.01s cpu, solution 37, maybe more) ? ;
X = [f4, michel, clermontFerrand, f1, p2, 300]
Yes (0.01s cpu, solution 38, maybe more) ? ;
X = [f4, michel, clermontFerrand, f4, p2, 300]
Yes (0.01s cpu, solution 39, maybe more) ? ;
X = [f4, michel, clermontFerrand, f4, p1, 300]
Yes (0.01s cpu, solution 40, maybe more) ? ;
X = [f5, smith, paris, f1, p1, 300]
Yes (0.01s cpu, solution 41, maybe more) ? ;
X = [f5, smith, paris, f2, p2, 200]
Yes (0.01s cpu, solution 42, maybe more) ? ;
X = [f5, smith, paris, f3, p3, 200]
Yes (0.01s cpu, solution 43, maybe more) ? ;
X = [f5, smith, paris, f4, p4, 400]
Yes (0.01s cpu, solution 44, maybe more) ? ;
X = [f5, smith, paris, f6, p5, 500]
Yes (0.01s cpu, solution 45, maybe more) ? ;
X = [f5, smith, paris, f6, p6, 1000]
Yes (0.01s cpu, solution 46, maybe more) ? ;
X = [f5, smith, paris, f6, p7, 300]
Yes (0.01s cpu, solution 47, maybe more) ? ;
X = [f5, smith, paris, f1, p2, 300]
Yes (0.01s cpu, solution 48, maybe more) ? ;
X = [f5, smith, paris, f4, p2, 300]
Yes (0.01s cpu, solution 49, maybe more) ? ;
X = [f5, smith, paris, f4, p1, 300]
Yes (0.01s cpu, solution 50, maybe more) ? ;
X = [f6, brown, marseille, f1, p1, 300]
Yes (0.01s cpu, solution 51, maybe more) ? ;
X = [f6, brown, marseille, f2, p2, 200]
Yes (0.01s cpu, solution 52, maybe more) ? ;
X = [f6, brown, marseille, f3, p3, 200]
Yes (0.01s cpu, solution 53, maybe more) ? ;
X = [f6, brown, marseille, f4, p4, 400]
Yes (0.01s cpu, solution 54, maybe more) ? ;
X = [f6, brown, marseille, f6, p5, 500]
Yes (0.01s cpu, solution 55, maybe more) ? ;
X = [f6, brown, marseille, f6, p6, 1000]
Yes (0.01s cpu, solution 56, maybe more) ? ;
X = [f6, brown, marseille, f6, p7, 300]
Yes (0.01s cpu, solution 57, maybe more) ? ;
X = [f6, brown, marseille, f1, p2, 300]
Yes (0.01s cpu, solution 58, maybe more) ? ;
X = [f6, brown, marseille, f4, p2, 300]
Yes (0.01s cpu, solution 59, maybe more) ? ;
X = [f6, brown, marseille, f4, p1, 300]
Yes (0.01s cpu, solution 60)

jointure(X).
X = [f1, dupont, lyon, p1, 300]
Yes (0.00s cpu, solution 1, maybe more) ? ;
X = [f1, dupont, lyon, p2, 300]
Yes (0.00s cpu, solution 2, maybe more) ? ;
X = [f2, durand, lille, p2, 200]
Yes (0.00s cpu, solution 3, maybe more) ? ;
X = [f3, martin, rennes, p3, 200]
Yes (0.00s cpu, solution 4, maybe more) ? ;
X = [f4, michel, clermontFerrand, p4, 400]
Yes (0.00s cpu, solution 5, maybe more) ? ;
X = [f4, michel, clermontFerrand, p2, 300]
Yes (0.00s cpu, solution 6, maybe more) ? ;
X = [f4, michel, clermontFerrand, p1, 300]
Yes (0.00s cpu, solution 7, maybe more) ? ;
X = [f6, brown, marseille, p5, 500]
Yes (0.00s cpu, solution 8, maybe more) ? ;
X = [f6, brown, marseille, p6, 1000]
Yes (0.00s cpu, solution 9, maybe more) ? ;
X = [f6, brown, marseille, p7, 300]
Yes (0.00s cpu, solution 10)

jointure350(X).
X = [f4, michel, clermontFerrand, p4, 400]
Yes (0.00s cpu, solution 1, maybe more) ? ;
X = [f6, brown, marseille, p5, 500]
Yes (0.00s cpu, solution 2, maybe more) ? ;
X = [f6, brown, marseille, p6, 1000]
Yes (0.00s cpu, solution 3, maybe more) ? ;
No (0.00s cpu)

div(X).
X = [f1, dupont, lyon]
Yes (0.00s cpu, solution 1, maybe more) ? ;
X = [f1, dupont, lyon]
Yes (0.00s cpu, solution 2, maybe more) ? ;
X = [f2, durand, lille]
Yes (0.00s cpu, solution 3, maybe more) ? ;
X = [f4, michel, clermontFerrand]
Yes (0.00s cpu, solution 4, maybe more) ? ;
X = [f4, michel, clermontFerrand]
Yes (0.00s cpu, solution 5, maybe more) ? ;
No (0.00s cpu)

*/

